version: '3.5'

services:
  app:
    container_name: tcr-world-tour-php
    build:
        context: ./docker/php
        args:
            UID: $U_ID
    environment:
      PHP_IDE_CONFIG: serverName=Docker
      PHP_XDEBUG_ENABLED: 1
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9005
    volumes:
      - ./:/app
      - ./docker/php/xdebug-macos.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ~/.ssh/id_rsa:/home/appuser/.ssh/id_rsa

  webserver:
    container_name: tcr-world-tour-nginx
    build:
      context: ./docker/nginx
      args:
        UID: $U_ID
    ports:
      - "8000:80"
    volumes:
      - ./public:/appdata/www/public

  db:
    container_name: tcr-world-tour-mysql
    image: arm64v8/mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_DATABASE=db
    volumes:
      - symfony-data:/var/lib/mysql

  phpmyadmin:
    container_name: tcr-world-tour-phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - "8080:80"

###> doctrine/doctrine-bundle ###
  database:
    container_name: tcr-world-tour-postgres
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready -U ${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  symfony-data:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
